version: "3"
services:
  app:
    image: node-app-image
    container_name: node-app
    build: .
    ports:
      - "3000:3001"
    volumes:
      - ./:/app
      # 不允许 container 里的文件同步到 host 机器里来
      - /app/node_modules
      - /app/dist
    environment:
      - PORT=3001
      - HELLO=world
    env_file:
      # 如果变量同名，下一个会覆盖上一个
      - ./.env
      - ./.env.testing
      - ./.env.development
      - ./.env.production
    depends_on:
      - redis
      - mysql
    networks:
      - network
##############################
# 用了 docker 的 network 后， node-app 容器就能用「内网」连接 node-mysql:3366, node-redis:6380
##############################
  mysql:
    image: mysql:5.7.22
    container_name: node-mysql
    ports:
      - "3366:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - network
###############################
  redis:
    image: redis:4.0.9
    container_name: node-redis
    command: redis-server --appendonly yes
    ports:
      - "6380:6379"
    networks:
      - network
###############################
networks:
  network:
